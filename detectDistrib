#!/bin/bash

: ${DEBOOTSTRAP_DIR=/usr/share/debootstrap/}
mirror=http://ftp.fr.debian.org/debian
debootstrap_scripts="${DEBOOTSTRAP_DIR}/scripts/"
declare -A data

findmirror () {
 [[ -e "${debootstrap_scripts}/${1:?No distrib specified! Specify a distrib please.}" ]] || {
  echo "Err> Variant "${1}" not found!" >&2
  exit 1
 }
 default_mirror () { mirror=${1:-debian} ; } # Set variable mirror from script debootstrap
 mirror_style () { return 0 ; } # inibits debootstrap functions
 download_style () { return 0 ; }
 finddebs_style () { return 0 ; }
 variants () { return 0 ; }
 keyring () { return 0 ; }
 doing_variant () { return 0 ; }
 error () { return 0 ; }

 source "${debootstrap_scripts}/${1}"
 
 unset default_mirror mirror_style download_style variants \
  finddebs_style keyring doing_variant error

}

downloadinfo () { # Download info from mirror
 wget -qO - "${mirror}/dists/${1}/Release" || {
  echo "Err> Echec in downloading data from \"${mirror}/dists/${1}/Release\"! (wget err $?)" >&2
  exit 1 
 }
}

data2array () {
 while IFS=: read a b ; do
  [[ -n $b ]] && data["$a"]="$b"
 done <<< "$(downloadinfo $(echo ${1} | sed 's/.*/\L&/') | grep -E '^[[:blank:]]*.*:.*$')"
}

findmirror $(echo ${1} | sed 's/.*/\L&/')
data2array $(echo ${1} | sed 's/.*/\L&/')

for elem in ${!data[*]} ; do
	echo "Key \"${elem}\" : Value : "${data[${elem}]}
done
